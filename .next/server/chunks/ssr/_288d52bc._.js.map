{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/api/analyze.ts"],"sourcesContent":["import { useState } from 'react';\n\n// Types\ninterface NewsArticle {\n  title: string;\n  summary: string;\n  source: string;\n  url: string;\n  publishedDate: string;\n}\n\ninterface StockRecommendation {\n  ticker: string;\n  companyName: string;\n  recommendationType: 'buy' | 'sell' | 'hold';\n  targetPrice: number;\n  currentPrice: number;\n  potentialUpside: number;\n  timeHorizon: string;\n  riskLevel: 'low' | 'medium' | 'high';\n  rationale: string[];\n}\n\ninterface SectorOutlook {\n  sector: string;\n  sentiment: 'bullish' | 'bearish' | 'neutral';\n  impactScore: number;\n  keyDrivers: string[];\n  opportunities: string[];\n  risks: string[];\n  recommendedStocks: string[];\n}\n\ninterface MacroTrend {\n  title: string;\n  description: string;\n  impactAssessment: string;\n  affectedSectors: string[];\n  investmentImplications: string[];\n  timelineProjection: string;\n}\n\ninterface TechnicalIndicator {\n  indicator: string;\n  signal: 'buy' | 'sell' | 'neutral';\n  strength: number;\n  description: string;\n  applicableStocks: string[];\n}\n\ninterface InvestmentStrategy {\n  strategyName: string;\n  suitableFor: string[];\n  allocationRecommendation: {\n    equities: number;\n    bonds: number;\n    commodities: number;\n    cash: number;\n    alternative: number;\n  };\n  topPicks: string[];\n  implementationSteps: string[];\n}\n\ninterface InvestmentAnalysis {\n  executiveSummary: string;\n  marketSnapshot: {\n    majorIndices: Array<{name: string, value: number, change: number}>;\n    keyRates: Array<{name: string, value: number, change: number}>;\n    commodities: Array<{name: string, value: number, change: number}>;\n    forex: Array<{pair: string, value: number, change: number}>;\n  };\n  topStockRecommendations: StockRecommendation[];\n  sectorOutlooks: SectorOutlook[];\n  macroTrends: MacroTrend[];\n  technicalAnalysis: TechnicalIndicator[];\n  investmentStrategies: InvestmentStrategy[];\n  disclaimer: string;\n}\n\ninterface NewsAnalysisData {\n  success: boolean;\n  data?: {\n    articles: NewsArticle[];\n    analysis: InvestmentAnalysis;\n    timestamp: string;\n  };\n  error?: string;\n}\n\n// News API response interfaces\ninterface NewsApiArticle {\n  title?: string;\n  description?: string;\n  source?: { name?: string };\n  url?: string;\n  publishedAt?: string;\n}\n\ninterface NewsApiResponse {\n  articles?: NewsApiArticle[];\n}\n\n// Groq API response interfaces\ninterface GroqChoice {\n  message?: {\n    content?: string;\n  };\n}\n\ninterface GroqResponse {\n  choices?: GroqChoice[];\n}\n\n// Configuration\nconst CONFIG = {\n  REQUEST_TIMEOUT: 60000,\n  API_KEYS: {\n    NEWS: process.env.NEXT_PUBLIC_NEWS_API_KEY,\n    GROQ: process.env.NEXT_PUBLIC_GROQ_API_KEY\n  },\n  DEFAULT_QUERY: \"NIFTY Sensex NSE BSE RBI Indian markets\",\n  REFRESH_INTERVAL: 3600000 // 1 hour in milliseconds\n} as const;\n\nconst INDIAN_MARKET_ANALYSIS_PROMPT = `You are a professional investment analyst specializing in Indian financial markets, with expertise in NSE, BSE, and macroeconomic trends in India. Analyze the provided news articles and generate a comprehensive investment recommendation report in JSON format focused on Indian markets. This report should provide actionable investment insights based on current market news, trends, and data.\n\nThe report should follow this structure:\n{\n  \"executiveSummary\": \"HTML-formatted overview highlighting key events in Indian markets and investment opportunities\",\n  \n  \"marketSnapshot\": {\n    \"majorIndices\": [{\"name\": \"Index name (e.g., NIFTY 50, SENSEX)\", \"value\": 0, \"change\": 0}],\n    \"keyRates\": [{\"name\": \"Rate name (e.g., RBI Repo Rate)\", \"value\": 0, \"change\": 0}],\n    \"commodities\": [{\"name\": \"Commodity name\", \"value\": 0, \"change\": 0}],\n    \"forex\": [{\"pair\": \"Currency pair (e.g., INR/USD)\", \"value\": 0, \"change\": 0}]\n  },\n  \n  \"topStockRecommendations\": [\n    {\n      \"ticker\": \"Stock ticker symbol (NSE/BSE)\",\n      \"companyName\": \"Company name\",\n      \"recommendationType\": \"buy|sell|hold\",\n      \"targetPrice\": 0,\n      \"currentPrice\": 0,\n      \"potentialUpside\": 0,\n      \"timeHorizon\": \"Short-term/Mid-term/Long-term\",\n      \"riskLevel\": \"low|medium|high\",\n      \"rationale\": [\"Reasons for recommendation\"]\n    }\n  ],\n  \n  \"sectorOutlooks\": [\n    {\n      \"sector\": \"Sector name (e.g., IT, Pharma, Banking)\",\n      \"sentiment\": \"bullish|bearish|neutral\",\n      \"impactScore\": 0,\n      \"keyDrivers\": [\"Key drivers affecting this sector in India\"],\n      \"opportunities\": [\"Investment opportunities\"],\n      \"risks\": [\"Potential risks\"],\n      \"recommendedStocks\": [\"Stock recommendations (NSE/BSE tickers)\"]\n    }\n  ],\n  \n  \"macroTrends\": [\n    {\n      \"title\": \"Trend name\",\n      \"description\": \"HTML-formatted trend analysis for Indian context\",\n      \"impactAssessment\": \"Assessment of impact on Indian markets\",\n      \"affectedSectors\": [\"Sectors in India affected by this trend\"],\n      \"investmentImplications\": [\"Investment implications for Indian investors\"],\n      \"timelineProjection\": \"Expected timeline\"\n    }\n  ],\n  \n  \"technicalAnalysis\": [\n    {\n      \"indicator\": \"Technical indicator name\",\n      \"signal\": \"buy|sell|neutral\",\n      \"strength\": 0,\n      \"description\": \"What this indicator suggests for Indian markets\",\n      \"applicableStocks\": [\"Indian stocks this applies to (NSE/BSE tickers)\"]\n    }\n  ],\n  \n  \"investmentStrategies\": [\n    {\n      \"strategyName\": \"Strategy name\",\n      \"suitableFor\": [\"Indian investor profiles this suits\"],\n      \"allocationRecommendation\": {\n        \"equities\": 0,\n        \"bonds\": 0,\n        \"commodities\": 0,\n        \"cash\": 0,\n        \"alternative\": 0\n      },\n      \"topPicks\": [\"Top investment picks in Indian markets\"],\n      \"implementationSteps\": [\"How to implement this strategy in Indian markets\"]\n    }\n  ],\n  \n  \"disclaimer\": \"Investment disclaimer notice appropriate for Indian regulatory context\"\n}\n\nGuidelines:\n- Focus exclusively on Indian markets (NSE, BSE)\n- Provide at least 5 specific stock recommendations from NSE/BSE with clear rationales\n- Include analysis of at least 4 major market sectors relevant to India\n- Identify 3-5 significant macroeconomic trends affecting Indian markets\n- Consider RBI policies, government regulations, and India-specific economic factors\n- Provide 3 different investment strategies for different Indian investor profiles\n- Ensure all recommendations are tied directly to news events and market data\n- Include both technical and fundamental analysis in your recommendations\n- Discuss potential risks alongside opportunities in the Indian context\n- All price targets should be in INR and predictions should be realistic\n- Include an appropriate investment disclaimer for Indian markets\n- Use sophisticated financial terminology while contextualizing for Indian markets`;\n\n// Main service class\nexport class IndianMarketInvestmentService {\n  private static lastFetchTime: number = 0;\n  private static cachedData: NewsAnalysisData | null = null;\n  private static isFetchingData: boolean = false;\n  private static pendingPromises: Array<{\n    resolve: (data: NewsAnalysisData) => void;\n    reject: (error: Error) => void;\n  }> = [];\n\n  private static async fetchWithTimeout(\n    url: string,\n    options: RequestInit\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), CONFIG.REQUEST_TIMEOUT);\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n      });\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error && error.name === 'AbortError') {\n        throw new Error('Request timed out');\n      }\n      throw error;\n    }\n  }\n\n  private static validateConfiguration(): void {\n    if (!CONFIG.API_KEYS.NEWS || !CONFIG.API_KEYS.GROQ) {\n      throw new Error('API keys not configured');\n    }\n  }\n\n  private static async fetchLatestIndianMarketNews(): Promise<NewsArticle[]> {\n    const today = new Date();\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n    \n    const fromDate = lastWeek.toISOString().split('T')[0];\n    const toDate = today.toISOString().split('T')[0];\n    \n    const searchUrl = new URL('https://newsapi.org/v2/everything');\n    searchUrl.searchParams.append('apiKey', CONFIG.API_KEYS.NEWS || '');\n    searchUrl.searchParams.append('q', CONFIG.DEFAULT_QUERY);\n    searchUrl.searchParams.append('language', 'en');\n    searchUrl.searchParams.append('sortBy', 'publishedAt');\n    searchUrl.searchParams.append('from', fromDate);\n    searchUrl.searchParams.append('to', toDate);\n    searchUrl.searchParams.append('pageSize', '25');\n    searchUrl.searchParams.append('domains', 'economictimes.indiatimes.com,moneycontrol.com,livemint.com,business-standard.com,ndtv.com/business,financialexpress.com,thehindubusinessline.com,businesstoday.in');\n\n    const response = await this.fetchWithTimeout(searchUrl.toString(), { method: 'GET' });\n\n    if (!response.ok) {\n      throw new Error(`News API error: ${response.status}`);\n    }\n\n    const data = await response.json() as NewsApiResponse;\n    if (!data?.articles || !Array.isArray(data.articles)) {\n      throw new Error('Invalid News API response format');\n    }\n\n    return data.articles.map((article: NewsApiArticle) => ({\n      title: article.title || 'No title available',\n      summary: article.description || 'No description available',\n      source: article.source?.name || 'Unknown source',\n      url: article.url || '#',\n      publishedDate: article.publishedAt || new Date().toISOString(),\n    }));\n  }\n\n  private static async generateIndianMarketAnalysis(\n    articles: NewsArticle[]\n  ): Promise<InvestmentAnalysis> {\n    const response = await this.fetchWithTimeout(\n      'https://api.groq.com/openai/v1/chat/completions',\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${CONFIG.API_KEYS.GROQ}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: 'llama3-70b-8192',\n          messages: [\n            { role: 'system', content: INDIAN_MARKET_ANALYSIS_PROMPT },\n            { \n              role: 'user', \n              content: `Analyze these news articles about Indian financial markets and provide investment recommendations in json format:\\n${JSON.stringify(articles, null, 2)}` \n            },\n          ],\n          temperature: 0.3,\n          max_tokens: 4000,\n          response_format: { type: 'json_object' },\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => null);\n      throw new Error(\n        `Groq API error (${response.status}): ${\n          errorData ? JSON.stringify(errorData) : response.statusText\n        }`\n      );\n    }\n\n    const data = await response.json() as GroqResponse;\n    const analysis = data?.choices?.[0]?.message?.content;\n\n    if (!analysis) {\n      throw new Error('No analysis generated from Groq API');\n    }\n\n    return JSON.parse(analysis) as InvestmentAnalysis;\n  }\n\n  public static async getIndianMarketAnalysis(): Promise<NewsAnalysisData> {\n    const currentTime = Date.now();\n    \n    // Return cached data if available and not expired\n    if (\n      this.cachedData &&\n      currentTime - this.lastFetchTime < CONFIG.REFRESH_INTERVAL\n    ) {\n      return this.cachedData;\n    }\n    \n    // If a fetch is already in progress, queue this request\n    if (this.isFetchingData) {\n      return new Promise<NewsAnalysisData>((resolve, reject) => {\n        this.pendingPromises.push({ resolve, reject });\n      });\n    }\n    \n    this.isFetchingData = true;\n    \n    try {\n      this.validateConfiguration();\n\n      const articles = await this.fetchLatestIndianMarketNews();\n      if (articles.length === 0) {\n        const errorResponse = { success: false, error: 'No news articles found for Indian markets' };\n        this.resolveAllPending(errorResponse);\n        return errorResponse;\n      }\n\n      const analysis = await this.generateIndianMarketAnalysis(articles);\n      const response: NewsAnalysisData = {\n        success: true,\n        data: {\n          articles,\n          analysis,\n          timestamp: new Date().toISOString(),\n        },\n      };\n\n      // Update cache\n      this.cachedData = response;\n      this.lastFetchTime = currentTime;\n      \n      // Resolve all pending promises\n      this.resolveAllPending(response);\n      \n      return response;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      console.error('Indian market analysis error:', error);\n      const errorResponse = { success: false, error: errorMessage };\n      \n      // Reject all pending promises\n      this.rejectAllPending(new Error(errorMessage));\n      \n      return errorResponse;\n    } finally {\n      this.isFetchingData = false;\n    }\n  }\n  \n  private static resolveAllPending(data: NewsAnalysisData): void {\n    for (const pending of this.pendingPromises) {\n      pending.resolve(data);\n    }\n    this.pendingPromises = [];\n  }\n  \n  private static rejectAllPending(error: Error): void {\n    for (const pending of this.pendingPromises) {\n      pending.reject(error);\n    }\n    this.pendingPromises = [];\n  }\n  \n  public static clearCache(): void {\n    this.cachedData = null;\n    this.lastFetchTime = 0;\n  }\n}\n\n// React hook\nexport const useIndianMarketRecommendations = () => {\n  const [investmentData, setInvestmentData] = useState<NewsAnalysisData | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const getIndianMarketAnalysis = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await IndianMarketInvestmentService.getIndianMarketAnalysis();\n      setInvestmentData(result);\n      return result;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const refreshAnalysis = () => {\n    IndianMarketInvestmentService.clearCache();\n    return getIndianMarketAnalysis();\n  };\n\n  const clearAnalysis = () => {\n    setInvestmentData(null);\n    setError(null);\n  };\n\n  return {\n    investmentData,\n    getIndianMarketAnalysis,\n    refreshAnalysis,\n    clearAnalysis,\n    isLoading,\n    error\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/analyze/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useInvestmentRecommendations, NewsArticle, StockRecommendation, SectorOutlook, MacroTrend, TechnicalIndicator, InvestmentStrategy } from '@/app/api/analyze';\n\nconst Frontend: React.FC = () => {\n  const { investmentData, analyzeInvestments, isLoading, error } = useInvestmentRecommendations();\n  const [topic, setTopic] = useState<string>('');\n  const [activeTab, setActiveTab] = useState<string>('summary');\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (topic.trim()) {\n      await analyzeInvestments(topic);\n    }\n  };\n\n  // Helper for rendering market snapshot items\n  const renderMarketItems = (items: Array<{name: string, value: number, change: number}> | Array<{pair: string, value: number, change: number}>) => {\n    return items.map((item, index) => (\n      <div key={index} className=\"flex justify-between p-2 border-b border-gray-200\">\n        <span className=\"font-medium\">{item.hasOwnProperty('name') ? (item as any).name : (item as any).pair}</span>\n        <div className=\"text-right\">\n          <div>{item.value.toLocaleString()}</div>\n          <div className={item.change >= 0 ? \"text-green-800\" : \"text-red-800\"}>\n            {item.change > 0 ? '+' : ''}{item.change.toFixed(2)}%\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render stock recommendations\n  const renderStockRecommendations = (stocks: StockRecommendation[]) => {\n    return stocks.map((stock, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <div className=\"flex justify-between items-start mb-2\">\n          <div>\n            <h3 className=\"text-lg font-bold\">{stock.ticker}: {stock.companyName}</h3>\n            <span className={`inline-block px-2 py-1 text-sm rounded ${\n              stock.recommendationType === 'buy' ? 'bg-green-100 text-green-800' : \n              stock.recommendationType === 'sell' ? 'bg-red-100 text-red-800' : 'bg-gray-100'\n            }`}>\n              {stock.recommendationType.toUpperCase()}\n            </span>\n          </div>\n          <div className=\"text-right\">\n            <div>Current: ${stock.currentPrice}</div>\n            <div>Target: ${stock.targetPrice}</div>\n            <div className={stock.potentialUpside >= 0 ? \"text-green-800\" : \"text-red-800\"}>\n              {stock.potentialUpside > 0 ? '+' : ''}{stock.potentialUpside}%\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-2\">\n          <span className={`text-sm mr-2 ${\n            stock.riskLevel === 'low' ? 'text-green-800' :\n            stock.riskLevel === 'high' ? 'text-red-800' : 'text-yellow-800'\n          }`}>\n            Risk: {stock.riskLevel}\n          </span>\n          <span className=\"text-sm\">Horizon: {stock.timeHorizon}</span>\n        </div>\n        <div className=\"text-sm\">\n          <p className=\"font-medium mb-1\">Rationale:</p>\n          <ul className=\"list-disc pl-5\">\n            {stock.rationale.map((point, i) => (\n              <li key={i}>{point}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render sector outlooks\n  const renderSectorOutlooks = (sectors: SectorOutlook[]) => {\n    return sectors.map((sector, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <div className=\"flex justify-between items-center mb-3\">\n          <h3 className=\"text-lg font-bold\">{sector.sector}</h3>\n          <span className={`inline-block px-2 py-1 text-sm rounded ${\n            sector.sentiment === 'bullish' ? 'bg-green-100 text-green-800' : \n            sector.sentiment === 'bearish' ? 'bg-red-100 text-red-800' : 'bg-gray-100'\n          }`}>\n            {sector.sentiment.toUpperCase()}\n          </span>\n        </div>\n        <div className=\"mb-3\">\n          <p className=\"text-sm font-medium\">Impact Score: {sector.impactScore}/10</p>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div>\n            <h4 className=\"font-medium mb-1\">Key Drivers:</h4>\n            <ul className=\"list-disc pl-5\">\n              {sector.keyDrivers.map((driver, i) => (\n                <li key={i}>{driver}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Opportunities:</h4>\n            <ul className=\"list-disc pl-5\">\n              {sector.opportunities.map((opportunity, i) => (\n                <li key={i}>{opportunity}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Risks:</h4>\n            <ul className=\"list-disc pl-5\">\n              {sector.risks.map((risk, i) => (\n                <li key={i}>{risk}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Recommended Stocks:</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {sector.recommendedStocks.map((stock, i) => (\n                <span key={i} className=\"inline-block px-2 py-1 bg-gray-100 text-sm rounded\">\n                  {stock}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render macro trends\n  const renderMacroTrends = (trends: MacroTrend[]) => {\n    return trends.map((trend, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <h3 className=\"text-lg font-bold mb-2\">{trend.title}</h3>\n        <div className=\"mb-3 text-sm\" dangerouslySetInnerHTML={{ __html: trend.description }} />\n        <div className=\"mb-3\">\n          <h4 className=\"font-medium mb-1\">Impact Assessment:</h4>\n          <p className=\"text-sm\">{trend.impactAssessment}</p>\n        </div>\n        <div className=\"mb-3\">\n          <h4 className=\"font-medium mb-1\">Timeline Projection:</h4>\n          <p className=\"text-sm\">{trend.timelineProjection}</p>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div>\n            <h4 className=\"font-medium mb-1\">Affected Sectors:</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {trend.affectedSectors.map((sector, i) => (\n                <span key={i} className=\"inline-block px-2 py-1 bg-gray-100 text-sm rounded\">\n                  {sector}\n                </span>\n              ))}\n            </div>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Investment Implications:</h4>\n            <ul className=\"list-disc pl-5\">\n              {trend.investmentImplications.map((implication, i) => (\n                <li key={i}>{implication}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render technical indicators\n  const renderTechnicalIndicators = (indicators: TechnicalIndicator[]) => {\n    return indicators.map((indicator, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <h3 className=\"text-lg font-bold\">{indicator.indicator}</h3>\n          <span className={`inline-block px-2 py-1 text-sm rounded ${\n            indicator.signal === 'buy' ? 'bg-green-100 text-green-800' : \n            indicator.signal === 'sell' ? 'bg-red-100 text-red-800' : 'bg-gray-100'\n          }`}>\n            {indicator.signal.toUpperCase()}\n          </span>\n        </div>\n        <div className=\"mb-3\">\n          <p className=\"text-sm\">Signal Strength: {indicator.strength}/10</p>\n        </div>\n        <div className=\"mb-3\">\n          <p className=\"text-sm\">{indicator.description}</p>\n        </div>\n        <div>\n          <h4 className=\"font-medium mb-1 text-sm\">Applicable to:</h4>\n          <div className=\"flex flex-wrap gap-1\">\n            {indicator.applicableStocks.map((stock, i) => (\n              <span key={i} className=\"inline-block px-2 py-1 bg-gray-100 text-sm rounded\">\n                {stock}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render investment strategies\n  const renderInvestmentStrategies = (strategies: InvestmentStrategy[]) => {\n    return strategies.map((strategy, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <h3 className=\"text-lg font-bold mb-2\">{strategy.strategyName}</h3>\n        <div className=\"mb-3\">\n          <h4 className=\"font-medium mb-1 text-sm\">Suitable For:</h4>\n          <div className=\"flex flex-wrap gap-1\">\n            {strategy.suitableFor.map((profile, i) => (\n              <span key={i} className=\"inline-block px-2 py-1 bg-gray-100 text-sm rounded\">\n                {profile}\n              </span>\n            ))}\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <h4 className=\"font-medium mb-1 text-sm\">Allocation Recommendation:</h4>\n          <div className=\"flex flex-wrap gap-2\">\n            {Object.entries(strategy.allocationRecommendation).map(([asset, percentage]) => (\n              <div key={asset} className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-1 flex items-center justify-center border border-gray-200 rounded-full\">\n                  <span className=\"font-bold\">{percentage}%</span>\n                </div>\n                <div className=\"text-xs capitalize\">{asset}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div>\n            <h4 className=\"font-medium mb-1\">Top Picks:</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {strategy.topPicks.map((pick, i) => (\n                <span key={i} className=\"inline-block px-2 py-1 bg-gray-100 text-sm rounded\">\n                  {pick}\n                </span>\n              ))}\n            </div>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Implementation Steps:</h4>\n            <ol className=\"list-decimal pl-5\">\n              {strategy.implementationSteps.map((step, i) => (\n                <li key={i}>{step}</li>\n              ))}\n            </ol>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Render news articles\n  const renderNewsArticles = (articles: NewsArticle[]) => {\n    return articles.map((article, index) => (\n      <div key={index} className=\"mb-4 p-4 border border-gray-200 rounded-md\">\n        <h3 className=\"text-lg font-bold mb-1\">\n          <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">\n            {article.title}\n          </a>\n        </h3>\n        <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n          <span>{article.source}</span>\n          <span>{new Date(article.publishedDate).toLocaleDateString()}</span>\n        </div>\n        <p className=\"text-sm\">{article.summary}</p>\n      </div>\n    ));\n  };\n\n  // Tab navigation component\n  const TabNavigation = () => (\n    <div className=\"flex overflow-x-auto mb-4 border-b border-gray-200\">\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'summary' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('summary')}\n      >\n        Executive Summary\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'stocks' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('stocks')}\n      >\n        Stock Recommendations\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'sectors' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('sectors')}\n      >\n        Sector Outlooks\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'trends' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('trends')}\n      >\n        Macro Trends\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'technical' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('technical')}\n      >\n        Technical Analysis\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'strategies' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('strategies')}\n      >\n        Investment Strategies\n      </button>\n      <button \n        className={`px-4 py-2 whitespace-nowrap ${activeTab === 'news' ? 'border-b-2 border-black font-medium' : ''}`}\n        onClick={() => setActiveTab('news')}\n      >\n        News Articles\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"mb-8 text-center\">\n          <h1 className=\"text-3xl font-bold mb-2\">Investment Analysis Dashboard</h1>\n          <p className=\"text-gray-600\">Get real-time investment recommendations based on current news</p>\n        </div>\n\n        <div className=\"mb-8 max-w-xl mx-auto\">\n          <form onSubmit={handleSubmit} className=\"flex gap-2\">\n            <input\n              type=\"text\"\n              value={topic}\n              onChange={(e) => setTopic(e.target.value)}\n              placeholder=\"Enter investment topic (e.g., technology, healthcare, energy)\"\n              className=\"flex-1 p-3 border border-gray-300 rounded\"\n              disabled={isLoading}\n            />\n            <button\n              type=\"submit\"\n              disabled={isLoading || !topic.trim()}\n              className=\"px-5 py-3 bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\n            >\n              {isLoading ? 'Analyzing...' : 'Analyze'}\n            </button>\n          </form>\n        </div>\n\n        {error && (\n          <div className=\"mb-8 p-4 bg-red-100 text-red-800 rounded-md\">\n            <p className=\"font-medium\">Error:</p>\n            <p>{error}</p>\n          </div>\n        )}\n\n        {isLoading && (\n          <div className=\"text-center py-12\">\n            <div className=\"inline-block h-12 w-12 border-4 border-t-black border-r-gray-200 border-b-gray-200 border-l-gray-200 rounded-full animate-spin mb-4\"></div>\n            <p className=\"text-gray-600\">Analyzing investment opportunities...</p>\n            <p className=\"text-sm text-gray-500\">This may take up to a minute</p>\n          </div>\n        )}\n\n        {investmentData?.success && investmentData.data && (\n          <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm\">\n            <div className=\"p-6\">\n              <TabNavigation />\n              \n              {activeTab === 'summary' && (\n                <div>\n                  <div className=\"mb-6\">\n                    <h2 className=\"text-xl font-bold mb-4\">Executive Summary</h2>\n                    <div dangerouslySetInnerHTML={{ __html: investmentData.data.analysis.executiveSummary }} />\n                  </div>\n                  \n                  <div className=\"mb-6\">\n                    <h2 className=\"text-xl font-bold mb-4\">Market Snapshot</h2>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"border border-gray-200 rounded\">\n                        <h3 className=\"p-2 bg-gray-100 font-medium\">Major Indices</h3>\n                        {renderMarketItems(investmentData.data.analysis.marketSnapshot.majorIndices)}\n                      </div>\n                      <div className=\"border border-gray-200 rounded\">\n                        <h3 className=\"p-2 bg-gray-100 font-medium\">Key Rates</h3>\n                        {renderMarketItems(investmentData.data.analysis.marketSnapshot.keyRates)}\n                      </div>\n                      <div className=\"border border-gray-200 rounded\">\n                        <h3 className=\"p-2 bg-gray-100 font-medium\">Commodities</h3>\n                        {renderMarketItems(investmentData.data.analysis.marketSnapshot.commodities)}\n                      </div>\n                      <div className=\"border border-gray-200 rounded\">\n                        <h3 className=\"p-2 bg-gray-100 font-medium\">Forex</h3>\n                        {renderMarketItems(investmentData.data.analysis.marketSnapshot.forex)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {activeTab === 'stocks' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Top Stock Recommendations</h2>\n                  {renderStockRecommendations(investmentData.data.analysis.topStockRecommendations)}\n                </div>\n              )}\n              \n              {activeTab === 'sectors' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Sector Outlooks</h2>\n                  {renderSectorOutlooks(investmentData.data.analysis.sectorOutlooks)}\n                </div>\n              )}\n              \n              {activeTab === 'trends' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Macro Trends</h2>\n                  {renderMacroTrends(investmentData.data.analysis.macroTrends)}\n                </div>\n              )}\n              \n              {activeTab === 'technical' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Technical Analysis</h2>\n                  {renderTechnicalIndicators(investmentData.data.analysis.technicalAnalysis)}\n                </div>\n              )}\n              \n              {activeTab === 'strategies' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Investment Strategies</h2>\n                  {renderInvestmentStrategies(investmentData.data.analysis.investmentStrategies)}\n                </div>\n              )}\n              \n              {activeTab === 'news' && (\n                <div>\n                  <h2 className=\"text-xl font-bold mb-4\">Latest News Articles</h2>\n                  {renderNewsArticles(investmentData.data.articles)}\n                </div>\n              )}\n              \n              <div className=\"mt-8 p-3 bg-gray-100 text-xs text-gray-600 rounded\">\n                <p>{investmentData.data.analysis.disclaimer}</p>\n                <p className=\"mt-1\">Last updated: {new Date(investmentData.data.timestamp).toLocaleString()}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Frontend;"],"names":[],"mappings":"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","debugId":null}}]
}