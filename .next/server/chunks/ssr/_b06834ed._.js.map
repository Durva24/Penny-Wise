{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/test/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Transaction } from \"@/app/api/getTransaction\";\n\ninterface SpendingChartProps {\n  transactions: Transaction[];\n}\n\nconst COLORS = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF8A65', '#64B5F6', '#81C784', '#BA68C8'];\n\nconst formatCurrency = (value: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  }).format(value);\n};\n\nconst SpendingChart: React.FC<SpendingChartProps> = ({ transactions }) => {\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  // Process data for chart\n  const categoryData = transactions.reduce((acc, transaction) => {\n    if (transaction.Type === 'Debit') {\n      acc[transaction.Category] = (acc[transaction.Category] || 0) + Number(transaction.Amount);\n    }\n    return acc;\n  }, {} as Record<string, number>);\n\n  // Sort categories by amount (highest first)\n  const chartData = Object.entries(categoryData)\n    .map(([name, value]) => ({\n      name,\n      value\n    }))\n    .sort((a, b) => b.value - a.value);\n\n  // Calculate total expenses\n  const totalExpenses = chartData.reduce((sum, item) => sum + item.value, 0);\n\n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const percentage = ((data.value / totalExpenses) * 100).toFixed(1);\n      \n      return (\n        <div className=\"bg-white p-3 shadow-md rounded-md border border-gray-200\">\n          <p className=\"font-medium text-gray-800\">{data.name}</p>\n          <p className=\"text-gray-600\">{formatCurrency(data.value)}</p>\n          <p className=\"text-gray-500\">{percentage}% of total</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const handlePieEnter = (_: any, index: number) => {\n    setActiveIndex(index);\n  };\n\n  const handlePieLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const renderLegend = (props: any) => {\n    const { payload } = props;\n    \n    return (\n      <ul className=\"flex flex-wrap justify-center gap-4 mt-4\">\n        {payload.map((entry: any, index: number) => (\n          <li \n            key={`legend-${index}`} \n            className=\"flex items-center gap-2\"\n          >\n            <div \n              className=\"w-3 h-3 rounded-full\" \n              style={{ backgroundColor: entry.color }}\n            />\n            <span className=\"text-sm text-gray-700\">{entry.value}</span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-semibold mb-4\">Spending by Category</h2>\n      <p className=\"text-gray-500 mb-4 text-center\">Total: {formatCurrency(totalExpenses)}</p>\n      \n      <div className=\"h-64\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart>\n            <Pie\n              data={chartData}\n              cx=\"50%\"\n              cy=\"50%\"\n              innerRadius={60}\n              outerRadius={80}\n              paddingAngle={5}\n              dataKey=\"value\"\n              onMouseEnter={handlePieEnter}\n              onMouseLeave={handlePieLeave}\n              activeIndex={activeIndex !== null ? activeIndex : undefined}\n              activeShape={(props) => {\n                const RADIAN = Math.PI / 180;\n                const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n                const sin = Math.sin(-RADIAN * midAngle);\n                const cos = Math.cos(-RADIAN * midAngle);\n                const mx = cx + (outerRadius + 30) * cos;\n                const my = cy + (outerRadius + 30) * sin;\n                const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n                const ey = my;\n                const textAnchor = cos >= 0 ? 'start' : 'end';\n                \n                return (\n                  <g>\n                    <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill} className=\"text-sm font-medium\">\n                      {payload.name}\n                    </text>\n                    <text x={cx} y={cy + 20} dy={8} textAnchor=\"middle\" fill=\"#999\" className=\"text-xs\">\n                      {`${(percent * 100).toFixed(1)}%`}\n                    </text>\n                    <path d={`M${cx},${cy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                    <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                    <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\" className=\"text-xs\">\n                      {`${formatCurrency(value)}`}\n                    </text>\n                  </g>\n                );\n              }}\n            >\n              {chartData.map((entry, index) => (\n                <Cell \n                  key={`cell-${index}`} \n                  fill={COLORS[index % COLORS.length]} \n                  strokeWidth={activeIndex === index ? 2 : 1}\n                  stroke=\"#fff\"\n                />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            <Legend content={renderLegend} />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n      \n      {/* Category breakdown table */}\n      <div className=\"mt-6 overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead>\n            <tr>\n              <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\n              <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n              <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Percentage</th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-gray-200\">\n            {chartData.map((item, index) => (\n              <tr key={index} className=\"hover:bg-gray-50\">\n                <td className=\"px-4 py-2\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: COLORS[index % COLORS.length] }}></div>\n                    {item.name}\n                  </div>\n                </td>\n                <td className=\"px-4 py-2 text-right font-medium\">{formatCurrency(item.value)}</td>\n                <td className=\"px-4 py-2 text-right text-gray-500\">\n                  {((item.value / totalExpenses) * 100).toFixed(1)}%\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SpendingChart;"],"names":[],"mappings":"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","debugId":null}}]
}