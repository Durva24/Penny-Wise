{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/api/getTransaction.ts"],"sourcesContent":["// lib/api/transactionApi.ts\nimport { useState, useEffect } from 'react';\n\n// Define types for our transaction data\nexport interface Transaction {\n  'Sr. No.': number;\n  'Name': string;\n  'Type': 'Credit' | 'Debit';\n  'Amount': number;\n  'Transaction Type': string;\n  'Category': string;\n  'Note': string;\n  'Date': string; // Added Date field\n}\n\nexport interface TransactionResponse {\n  status: 'success' | 'error';\n  data: Transaction[];\n  message?: string;\n}\n\nexport interface AddTransactionPayload {\n  name: string;\n  type: 'Credit' | 'Debit';\n  amount: number;\n  transactionType: string;\n  category?: string;\n  note?: string;\n  date?: string; // Added Date field\n}\n\nexport interface UpdateTransactionPayload extends Partial<Transaction> {\n  'Sr. No.': number; // Required for updates\n}\n\n// Custom hook to fetch transactions with loading and error states\nexport const useTransactions = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchTransactions = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec?action=getTransactions'\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const data: TransactionResponse = await response.json();\n      \n      if (data.status === 'success') {\n        setTransactions(data.data);\n      } else {\n        throw new Error(data.message || 'Failed to fetch transactions');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Add a new transaction\n  const addTransaction = async (transaction: AddTransactionPayload) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec?action=addTransaction',\n        {\n          method: 'POST',\n          body: JSON.stringify(transaction),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === 'success') {\n        await fetchTransactions(); // Refresh the list\n        return data.data;\n      } else {\n        throw new Error(data.message || 'Failed to add transaction');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Update an existing transaction\n  const updateTransaction = async (transaction: UpdateTransactionPayload) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec?action=updateTransaction',\n        {\n          method: 'POST',\n          body: JSON.stringify(transaction),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === 'success') {\n        await fetchTransactions(); // Refresh the list\n        return data.data;\n      } else {\n        throw new Error(data.message || 'Failed to update transaction');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Delete a transaction\n  const deleteTransaction = async (id: number) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec?action=deleteTransaction',\n        {\n          method: 'POST',\n          body: JSON.stringify({ id }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === 'success') {\n        await fetchTransactions(); // Refresh the list\n        return true;\n      } else {\n        throw new Error(data.message || 'Failed to delete transaction');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  return { \n    transactions, \n    isLoading, \n    error, \n    refetch: fetchTransactions,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/api/putTransaction.ts"],"sourcesContent":["interface TransactionData {\n  name: string;\n  type: string; // \"Income\" or \"Expense\"\n  amount: number;\n  transactionType: string; // \"Cash\", \"Card\", etc.\n  category: string;\n  note: string;\n  date: string;\n}\n\n/**\n * Adds a new transaction to the spreadsheet using the Google Apps Script\n * @param data Transaction data to be added\n * @returns Promise with the response from the server\n */\nexport const addTransaction = async (data: TransactionData): Promise<any> => {\n  try {\n    // Base URL for the Google Apps Script\n    const baseUrl = \"https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec\";\n    \n    // Create URL with query parameters\n    const url = new URL(baseUrl);\n    url.searchParams.append(\"action\", \"addTransaction\");\n    \n    // Create payload for POST request\n    const payload = {\n      name: data.name,\n      type: data.type,\n      amount: data.amount,\n      transactionType: data.transactionType,\n      category: data.category || \"\",\n      note: data.note || \"\",\n      date: data.date || new Date().toISOString().split('T')[0]\n    };\n    \n    // Make POST request with JSON payload\n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      redirect: 'follow'\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    \n    // Check content type to determine how to process the response\n    const contentType = response.headers.get(\"content-type\");\n    \n    if (contentType && contentType.includes(\"application/json\")) {\n      // If response is JSON, parse it\n      return await response.json();\n    } else {\n      // If not JSON (likely plain text), return as text but in a structured format\n      const textResponse = await response.text();\n      return { \n        success: true, \n        message: textResponse,\n        data: data\n      };\n    }\n  } catch (error) {\n    console.error(\"Error adding transaction:\", error);\n    throw error;\n  }\n};\n\n/**\n * Gets all transactions from the spreadsheet\n * @returns Promise with the list of transactions\n */\nexport const getTransactions = async (): Promise<any> => {\n  try {\n    const baseUrl = \"https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec\";\n    \n    const url = new URL(baseUrl);\n    url.searchParams.append(\"action\", \"getTransactions\");\n    \n    const response = await fetch(url.toString());\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(\"Error getting transactions:\", error);\n    throw error;\n  }\n};\n\n/**\n * Updates an existing transaction in the spreadsheet\n * @param data Transaction data with Sr. No. to identify which transaction to update\n * @returns Promise with the response from the server\n */\nexport const updateTransaction = async (data: TransactionData & { \"Sr. No.\": number }): Promise<any> => {\n  try {\n    const baseUrl = \"https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec\";\n    \n    const url = new URL(baseUrl);\n    url.searchParams.append(\"action\", \"updateTransaction\");\n    \n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      redirect: 'follow'\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(\"Error updating transaction:\", error);\n    throw error;\n  }\n};\n\n/**\n * Deletes a transaction from the spreadsheet\n * @param id The Sr. No. of the transaction to delete\n * @returns Promise with the response from the server\n */\nexport const deleteTransaction = async (id: number): Promise<any> => {\n  try {\n    const baseUrl = \"https://script.google.com/macros/s/AKfycbwpVDMAbxpwKP0mwyfj_b19cMUMx4JOeVLPgjDcHlRQYX2NHvCm9OOFmApbGD3yYbn-dg/exec\";\n    \n    const url = new URL(baseUrl);\n    url.searchParams.append(\"action\", \"deleteTransaction\");\n    \n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id }),\n      redirect: 'follow'\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(\"Error deleting transaction:\", error);\n    throw error;\n  }\n};\n\n// Export types for use in other components\nexport type { TransactionData };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/components/ActionButtons.tsx"],"sourcesContent":["\"use client\";\nimport { useState, FormEvent, useEffect } from \"react\";\nimport { addTransaction, TransactionData } from \"@/app/api/putTransaction\";\n\n// Define categories for Credit and Debit types\nconst CATEGORIES = {\n  Credit: [\"Salary\", \"Investments\", \"Gift\", \"Refund\", \"Business\", \"Other\"],\n  Debit: [\"Food\", \"Transport\", \"Shopping\", \"Bills\", \"Entertainment\", \"Healthcare\", \"Education\", \"Housing\", \"Other\"]\n};\n\nexport default function TransactionManager() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showRecent, setShowRecent] = useState(false);\n  const [recentTransactions, setRecentTransactions] = useState<TransactionData[]>([]);\n  const [formData, setFormData] = useState<TransactionData>({\n    name: \"\",\n    type: \"Debit\", // Changed from \"Expense\" to \"Debit\"\n    amount: 0,\n    transactionType: \"Cash\",\n    category: \"\",\n    note: \"\",\n    date: new Date().toISOString().split('T')[0]\n  });\n\n  // Open modal with predefined transaction type\n  const openModal = (type: 'Credit' | 'Debit') => { // Changed from 'Income' | 'Expense' to 'Credit' | 'Debit'\n    setFormData(prev => ({\n      ...prev,\n      type,\n      name: \"\",\n      amount: 0,\n      category: \"\",\n      note: \"\",\n      date: new Date().toISOString().split('T')[0]\n    }));\n    setIsModalOpen(true);\n    setError(null);\n    setIsSuccess(false);\n  };\n\n  // Handle input changes\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: name === \"amount\" ? parseFloat(value) || 0 : value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    \n    // Validate form data\n    if (!formData.name.trim()) {\n      setError(\"Please enter a description\");\n      return;\n    }\n    \n    if (formData.amount <= 0) {\n      setError(\"Amount must be greater than 0\");\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Call API to add transaction\n      await addTransaction(formData);\n      \n      // Add to recent transactions\n      setRecentTransactions(prev => [formData, ...prev].slice(0, 5));\n      \n      // Store in local storage\n      const savedTransactions = JSON.parse(localStorage.getItem('recentTransactions') || '[]');\n      localStorage.setItem('recentTransactions', JSON.stringify([formData, ...savedTransactions].slice(0, 5)));\n      \n      // Show success message\n      setIsSuccess(true);\n      \n      // Reset and close form after success\n      setTimeout(() => {\n        setIsSuccess(false);\n        setIsModalOpen(false);\n        \n        // Reset form\n        setFormData({\n          name: \"\",\n          type: formData.type,\n          amount: 0,\n          transactionType: \"Cash\",\n          category: \"\",\n          note: \"\",\n          date: new Date().toISOString().split('T')[0]\n        });\n      }, 1500);\n    } catch (err) {\n      setError(\"Failed to add transaction. Please try again.\");\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Load recent transactions from local storage on component mount\n  useEffect(() => {\n    const savedTransactions = localStorage.getItem('recentTransactions');\n    if (savedTransactions) {\n      try {\n        setRecentTransactions(JSON.parse(savedTransactions));\n      } catch (err) {\n        console.error(\"Error parsing saved transactions:\", err);\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto\">\n      {/* Transaction buttons - Enhanced container */}\n      <div className=\"bg-white rounded-xl shadow-md p-6 mb-6\">\n        <h2 className=\"text-lg font-medium text-gray-800 mb-4 text-center\">New Transaction</h2>\n        <div className=\"flex flex-col sm:flex-row justify-center space-y-3 sm:space-y-0 sm:space-x-6\">\n          <button\n            onClick={() => openModal('Credit')}\n            className=\"px-8 py-3.5 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-medium rounded-lg shadow transition duration-200 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2\"\n          >\n            <div className=\"flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              </svg>\n              Add Credit\n            </div>\n          </button>\n          <button\n            onClick={() => openModal('Debit')}\n            className=\"px-8 py-3.5 bg-gradient-to-r from-rose-500 to-rose-600 hover:from-rose-600 hover:to-rose-700 text-white font-medium rounded-lg shadow transition duration-200 focus:outline-none focus:ring-2 focus:ring-rose-500 focus:ring-offset-2\"\n          >\n            <div className=\"flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              </svg>\n              Add Debit\n            </div>\n          </button>\n        </div>\n      </div>\n      \n      {/* Recent transactions toggle */}\n      {recentTransactions.length > 0 && (\n        <div className=\"mb-6\">\n          <button \n            onClick={() => setShowRecent(!showRecent)}\n            className=\"flex items-center justify-center mx-auto text-gray-600 hover:text-gray-900\"\n          >\n            <span className=\"mr-2\">{showRecent ? 'Hide' : 'Show'} recent transactions</span>\n            <svg \n              xmlns=\"http://www.w3.org/2000/svg\" \n              className={`h-4 w-4 transform transition-transform ${showRecent ? 'rotate-180' : ''}`}\n              viewBox=\"0 0 24 24\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              strokeWidth=\"2\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            >\n              <polyline points=\"6 9 12 15 18 9\"></polyline>\n            </svg>\n          </button>\n          \n          {/* Recent transactions list */}\n          {showRecent && (\n            <div className=\"mt-4 bg-white rounded-lg shadow overflow-hidden\">\n              <div className=\"px-4 py-3 bg-gray-50 border-b\">\n                <h3 className=\"text-sm font-medium text-gray-700\">Recent Transactions</h3>\n              </div>\n              <div className=\"divide-y divide-gray-200\">\n                {recentTransactions.map((transaction, index) => (\n                  <div key={index} className=\"px-4 py-3 hover:bg-gray-50\">\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"font-medium text-gray-800\">{transaction.name}</p>\n                        <p className=\"text-sm text-gray-600\">\n                          {transaction.category} • {transaction.transactionType} • {new Date(transaction.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <div className={`font-medium ${transaction.type === 'Credit' ? 'text-emerald-600' : 'text-rose-600'}`}>\n                        {transaction.type === 'Credit' ? '+' : '-'}₹{transaction.amount.toFixed(2)}\n                      </div>\n                    </div>\n                    {transaction.note && (\n                      <p className=\"mt-1 text-sm text-gray-500\">Note: {transaction.note}</p>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Modal overlay */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white rounded-xl shadow-lg w-full max-w-md relative animate-fade-in\">\n            {/* Close button */}\n            <button \n              onClick={() => setIsModalOpen(false)} \n              className=\"absolute top-4 right-4 text-gray-600 hover:text-gray-900\"\n              aria-label=\"Close modal\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <div className={`h-10 w-10 rounded-full flex items-center justify-center mr-3 ${formData.type === 'Credit' ? 'bg-emerald-100' : 'bg-rose-100'}`}>\n                  {formData.type === 'Credit' ? (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-emerald-600\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                    </svg>\n                  ) : (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-rose-600\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                    </svg>\n                  )}\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-800\">\n                  {formData.type === 'Credit' ? 'Add Credit' : 'Add Debit'}\n                </h2>\n              </div>\n\n              {isSuccess && (\n                <div className=\"mb-4 p-3 bg-emerald-100 text-emerald-700 rounded-lg\">\n                  Transaction added successfully!\n                </div>\n              )}\n\n              {error && (\n                <div className=\"mb-4 p-3 bg-rose-100 text-rose-700 rounded-lg\">\n                  {error}\n                </div>\n              )}\n\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"space-y-1\">\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-800\">Description</label>\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                    placeholder=\"Enter transaction description\"\n                  />\n                </div>\n\n                <div className=\"space-y-1\">\n                  <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-800\">Amount (₹)</label>\n                  <input\n                    id=\"amount\"\n                    name=\"amount\"\n                    type=\"number\"\n                    required\n                    min=\"0.01\"\n                    step=\"0.01\"\n                    value={formData.amount || ''}\n                    onChange={handleChange}\n                    className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                    placeholder=\"0.00\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-1\">\n                    <label htmlFor=\"transactionType\" className=\"block text-sm font-medium text-gray-800\">Payment Method</label>\n                    <select\n                      id=\"transactionType\"\n                      name=\"transactionType\"\n                      value={formData.transactionType}\n                      onChange={handleChange}\n                      className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                    >\n                      <option value=\"Cash\">Cash</option>\n                      <option value=\"Card\">Card</option>\n                      <option value=\"UPI\">UPI</option>\n                      <option value=\"Bank Transfer\">Bank Transfer</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n\n                  <div className=\"space-y-1\">\n                    <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-800\">Category</label>\n                    <select\n                      id=\"category\"\n                      name=\"category\"\n                      value={formData.category}\n                      onChange={handleChange}\n                      className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                    >\n                      <option value=\"\">Select category</option>\n                      {CATEGORIES[formData.type as 'Credit' | 'Debit'].map((category) => (\n                        <option key={category} value={category}>{category}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"space-y-1\">\n                  <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-800\">Date</label>\n                  <input\n                    id=\"date\"\n                    name=\"date\"\n                    type=\"date\"\n                    required\n                    value={formData.date}\n                    onChange={handleChange}\n                    className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                  />\n                </div>\n\n                <div className=\"space-y-1\">\n                  <label htmlFor=\"note\" className=\"block text-sm font-medium text-gray-800\">Note (Optional)</label>\n                  <textarea\n                    id=\"note\"\n                    name=\"note\"\n                    rows={2}\n                    value={formData.note}\n                    onChange={handleChange}\n                    className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n                    placeholder=\"Additional details...\"\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className={`w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-base font-medium text-white ${\n                    formData.type === 'Credit' ? 'bg-emerald-600 hover:bg-emerald-700' : 'bg-rose-600 hover:bg-rose-700'\n                  } focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n                    formData.type === 'Credit' ? 'focus:ring-emerald-500' : 'focus:ring-rose-500'\n                  } ${isLoading ? 'opacity-75 cursor-not-allowed' : ''}`}\n                >\n                  {isLoading ? (\n                    <span className=\"flex items-center\">\n                      <svg className=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Processing...\n                    </span>\n                  ) : (\n                    `Save ${formData.type}`\n                  )}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/components/AiSuggestions.tsx"],"sourcesContent":["// components/dashboard/AiSuggestions.tsx\n\"use client\";\n\nimport React from \"react\";\n\nexport default function AiSuggestions() {\n  return (\n    <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Smart Insights</h3>\n        <div className=\"rounded-full bg-gray-100 p-1\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>\n          </svg>\n        </div>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {/* Suggestion 1 */}\n        <div className=\"rounded-lg border border-gray-200 p-3\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"rounded-full bg-blue-100 p-2 flex-shrink-0\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-blue-600\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line>\n              </svg>\n            </div>\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900\">Subscription Alert</h4>\n              <p className=\"mt-1 text-xs text-gray-600\">You have 3 subscriptions totaling $45.97 per month that could be reviewed.</p>\n              <button className=\"mt-2 text-xs font-medium text-blue-600 hover:text-blue-800\">Review Now</button>\n            </div>\n          </div>\n        </div>\n        \n        {/* Suggestion 2 */}\n        <div className=\"rounded-lg border border-gray-200 p-3\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"rounded-full bg-green-100 p-2 flex-shrink-0\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-green-600\">\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                <polyline points=\"19 12 12 19 5 12\"></polyline>\n              </svg>\n            </div>\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900\">Savings Opportunity</h4>\n              <p className=\"mt-1 text-xs text-gray-600\">Based on your spending, you can save an additional $250 this month.</p>\n              <button className=\"mt-2 text-xs font-medium text-green-600 hover:text-green-800\">See How</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <button className=\"mt-3 w-full rounded-lg border border-gray-200 bg-gray-50 py-2 text-xs font-medium text-gray-600 hover:bg-gray-100\">\n        View All Insights\n      </button>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AACzC;;AAIe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,OAAM;4BAA6B,OAAM;4BAAK,QAAO;4BAAK,SAAQ;4BAAY,MAAK;4BAAO,QAAO;4BAAe,aAAY;4BAAI,eAAc;4BAAQ,gBAAe;sCACxK,cAAA,8OAAC;gCAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAKd,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,OAAM;wCAA6B,OAAM;wCAAK,QAAO;wCAAK,SAAQ;wCAAY,MAAK;wCAAO,QAAO;wCAAe,aAAY;wCAAI,eAAc;wCAAQ,gBAAe;wCAAQ,WAAU;;0DAC1L,8OAAC;gDAAO,IAAG;gDAAK,IAAG;gDAAK,GAAE;;;;;;0DAC1B,8OAAC;gDAAK,IAAG;gDAAK,IAAG;gDAAI,IAAG;gDAAK,IAAG;;;;;;0DAChC,8OAAC;gDAAK,IAAG;gDAAK,IAAG;gDAAK,IAAG;gDAAK,IAAG;;;;;;;;;;;;;;;;;8CAGrC,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAoC;;;;;;sDAClD,8OAAC;4CAAE,WAAU;sDAA6B;;;;;;sDAC1C,8OAAC;4CAAO,WAAU;sDAA6D;;;;;;;;;;;;;;;;;;;;;;;kCAMrF,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,OAAM;wCAA6B,OAAM;wCAAK,QAAO;wCAAK,SAAQ;wCAAY,MAAK;wCAAO,QAAO;wCAAe,aAAY;wCAAI,eAAc;wCAAQ,gBAAe;wCAAQ,WAAU;;0DAC1L,8OAAC;gDAAK,IAAG;gDAAK,IAAG;gDAAI,IAAG;gDAAK,IAAG;;;;;;0DAChC,8OAAC;gDAAS,QAAO;;;;;;;;;;;;;;;;;8CAGrB,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAoC;;;;;;sDAClD,8OAAC;4CAAE,WAAU;sDAA6B;;;;;;sDAC1C,8OAAC;4CAAO,WAAU;sDAA+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMzF,8OAAC;gBAAO,WAAU;0BAAoH;;;;;;;;;;;;AAK5I","debugId":null}},
    {"offset": {"line": 1449, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/components/SpendingChart.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend, Sector } from 'recharts';\nimport { useTransactions, Transaction } from '@/app/api/getTransaction';\n\n// Chart configuration\nconst COLORS = [\n  '#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', \n  '#EC4899', '#14B8A6', '#F97316', '#6366F1', '#06B6D4'\n];\n\n// Chart type selection options\ntype ChartView = 'category' | 'transactionType';\n\n// Loading component for lazy loading\nconst ChartLoading = () => (\n  <div className=\"flex flex-col items-center justify-center h-64\">\n    <div className=\"w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n    <p className=\"mt-4 text-gray-700\">Loading spending data...</p>\n  </div>\n);\n\nconst SpendingChart: React.FC = () => {\n  const { transactions, isLoading, error } = useTransactions();\n  const [activeIndex, setActiveIndex] = useState<number | undefined>(undefined);\n  const [chartView, setChartView] = useState<ChartView>('category');\n  const [chartData, setChartData] = useState<Array<{name: string, value: number}>>([]);\n  const [totalExpenses, setTotalExpenses] = useState<number>(0);\n  \n  // Format currency in INR\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  // Process transactions data based on selected view\n  useEffect(() => {\n    if (!transactions.length) {\n      setChartData([]);\n      setTotalExpenses(0);\n      return;\n    }\n    \n    const groupByField = chartView === 'category' ? 'Category' : 'Transaction Type';\n    \n    const aggregatedData = transactions.reduce((acc, transaction) => {\n      if (transaction?.Type === 'Debit') {\n        const key = transaction[groupByField] || 'Uncategorized';\n        const amount = typeof transaction.Amount === 'string' \n          ? parseFloat(transaction.Amount) \n          : Number(transaction.Amount);\n        \n        if (!isNaN(amount)) {\n          acc[key] = (acc[key] || 0) + amount;\n        }\n      }\n      return acc;\n    }, {} as Record<string, number>);\n\n    // Convert to array and sort by value (highest first)\n    const processedData = Object.entries(aggregatedData)\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n    \n    setChartData(processedData);\n    setTotalExpenses(processedData.reduce((sum, item) => sum + item.value, 0));\n  }, [transactions, chartView]);\n\n  // Render active shape with additional details when hovering\n  const renderActiveShape = (props: any) => {\n    const RADIAN = Math.PI / 180;\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n      <g>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#1F2937\" className=\"text-xs font-medium\">\n          {payload.name}\n        </text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#4B5563\" className=\"text-xs\">\n          {`${formatCurrency(value)} (${(percent * 100).toFixed(1)}%)`}\n        </text>\n      </g>\n    );\n  };\n\n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const percentage = ((data.value / totalExpenses) * 100).toFixed(1);\n      \n      return (\n        <div className=\"bg-white p-3 shadow-lg rounded-md border border-gray-200\">\n          <p className=\"font-semibold text-gray-900\">{data.name}</p>\n          <p className=\"text-gray-800\">{formatCurrency(data.value)}</p>\n          <p className=\"text-gray-700\">{percentage}% of total</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const handlePieEnter = (_: any, index: number) => {\n    setActiveIndex(index);\n  };\n\n  const handlePieLeave = () => {\n    setActiveIndex(undefined);\n  };\n\n  // Custom legend component\n  const renderLegend = (props: any) => {\n    const { payload } = props;\n    \n    return (\n      <ul className=\"flex flex-wrap justify-center gap-4 mt-6\">\n        {payload.map((entry: any, index: number) => (\n          <li \n            key={`legend-${index}`} \n            className=\"flex items-center gap-2 cursor-pointer hover:opacity-80 transition-opacity\"\n            onClick={() => setActiveIndex(index === activeIndex ? undefined : index)}\n          >\n            <div \n              className=\"w-3 h-3 rounded-full\" \n              style={{ backgroundColor: entry.color }}\n            />\n            <span className={`text-sm text-gray-900 ${activeIndex === index ? 'font-medium' : ''}`}>\n              {entry.value}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"bg-white p-8 rounded-lg shadow-md text-center\">\n        <ChartLoading />\n      </div>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div className=\"bg-white p-8 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900\">Spending Analysis</h2>\n        <div className=\"bg-red-50 p-4 rounded-md border border-red-200\">\n          <p className=\"text-red-700\">Error loading data: {error}</p>\n          <p className=\"text-gray-700 mt-2\">Please try again later or contact support if the issue persists.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (chartData.length === 0) {\n    return (\n      <div className=\"bg-white p-8 rounded-lg shadow-md text-center\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900\">Spending Analysis</h2>\n        <div className=\"flex flex-col items-center justify-center h-64\">\n          <svg className=\"w-16 h-16 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          <p className=\"mt-4 text-gray-700\">No expense data available</p>\n          <p className=\"text-gray-600 text-sm mt-2\">Try adding some transactions to see your spending breakdown.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-8 rounded-lg shadow-md\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Spending Analysis</h2>\n        <div className=\"inline-flex rounded-md shadow-sm\">\n          <button\n            type=\"button\"\n            onClick={() => setChartView('category')}\n            className={`px-4 py-2 text-sm font-medium rounded-l-md border ${\n              chartView === 'category'\n                ? 'bg-blue-50 text-blue-800 border-blue-300'\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-50'\n            }`}\n          >\n            By Category\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setChartView('transactionType')}\n            className={`px-4 py-2 text-sm font-medium rounded-r-md border-t border-r border-b ${\n              chartView === 'transactionType'\n                ? 'bg-blue-50 text-blue-800 border-blue-300'\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-50'\n            }`}\n          >\n            By Transaction Type\n          </button>\n        </div>\n      </div>\n\n      <div className=\"text-center mb-6\">\n        <p className=\"text-gray-600 text-sm uppercase tracking-wider\">Total Expenses</p>\n        <p className=\"text-3xl font-bold text-gray-900\">{formatCurrency(totalExpenses)}</p>\n      </div>\n\n      <Suspense fallback={<ChartLoading />}>\n        <div className=\"h-72\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={chartData}\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={60}\n                outerRadius={80}\n                paddingAngle={4}\n                dataKey=\"value\"\n                activeIndex={activeIndex}\n                activeShape={renderActiveShape}\n                onMouseEnter={handlePieEnter}\n                onMouseLeave={handlePieLeave}\n              >\n                {chartData.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`} \n                    fill={COLORS[index % COLORS.length]} \n                    stroke=\"none\"\n                  />\n                ))}\n              </Pie>\n              <Tooltip content={<CustomTooltip />} />\n              <Legend content={renderLegend} />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      </Suspense>\n      \n      {/* Breakdown table */}\n      <div className=\"mt-8 border-t pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Detailed Breakdown</h3>\n        <div className=\"overflow-x-auto rounded-lg border border-gray-200\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\n                  {chartView === 'category' ? 'Category' : 'Transaction Type'}\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-700 uppercase tracking-wider\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-700 uppercase tracking-wider\">\n                  Percentage\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {chartData.map((item, index) => (\n                <tr \n                  key={index} \n                  className={`hover:bg-gray-50 transition-colors ${activeIndex === index ? 'bg-blue-50' : ''}`}\n                  onMouseEnter={() => setActiveIndex(index)}\n                  onMouseLeave={() => setActiveIndex(undefined)}\n                >\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-3 flex-shrink-0\" \n                        style={{ backgroundColor: COLORS[index % COLORS.length] }}\n                      ></div>\n                      <span className=\"font-medium text-gray-900\">{item.name}</span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right font-medium text-gray-900\">\n                    {formatCurrency(item.value)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-gray-700\">\n                    {((item.value / totalExpenses) * 100).toFixed(1)}%\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n            <tfoot className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"row\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\n                  Total\n                </th>\n                <td className=\"px-6 py-3 text-right font-medium text-gray-900\">\n                  {formatCurrency(totalExpenses)}\n                </td>\n                <td className=\"px-6 py-3 text-right text-gray-700\">\n                  100%\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpendingChart;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2209, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/components/BalanceChart.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useMemo } from 'react';\nimport { useTransactions } from '@/app/api/getTransaction';\nimport { \n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid,\n  Tooltip, ResponsiveContainer, Legend\n} from 'recharts';\n\n// Type definitions for our data\ntype PeriodView = 'all' | 'monthly' | 'weekly';\ntype TransactionSummary = {\n  date: string;\n  balance: number;\n  income: number;\n  expense: number;\n};\n\n// Currency formatter for Indian Rupees\nconst formatCurrency = (amount: number) => {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0\n  }).format(amount);\n};\n\n// Loading skeleton component\nconst ChartSkeleton = () => (\n  <div className=\"animate-pulse\">\n    <div className=\"h-4 w-24 bg-gray-200 rounded mb-4\"></div>\n    <div className=\"h-64 w-full bg-gray-200 rounded\"></div>\n  </div>\n);\n\n// Error component\nconst ErrorDisplay = ({ message, retry }: { message: string, retry: () => void }) => (\n  <div className=\"py-6 flex flex-col items-center justify-center text-center\">\n    <div className=\"mb-3 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-gray-800\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n      </svg>\n    </div>\n    <h4 className=\"text-base font-medium text-gray-900\">Failed to load transaction data</h4>\n    <p className=\"mt-1 text-sm text-gray-700\">{message}</p>\n    <button \n      onClick={retry}\n      className=\"mt-4 rounded-lg border border-gray-400 bg-white px-4 py-2 text-sm font-medium text-gray-800 shadow-sm hover:bg-gray-50\"\n    >\n      Try Again\n    </button>\n  </div>\n);\n\n// Empty state component\nconst EmptyState = () => (\n  <div className=\"py-6 flex flex-col items-center justify-center text-center\">\n    <div className=\"mb-3 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-gray-700\">\n        <rect x=\"2\" y=\"5\" width=\"20\" height=\"14\" rx=\"2\"></rect>\n        <line x1=\"2\" y1=\"10\" x2=\"22\" y2=\"10\"></line>\n      </svg>\n    </div>\n    <h4 className=\"text-base font-medium text-gray-900\">No transaction data available</h4>\n    <p className=\"mt-1 text-sm text-gray-700\">Your transactions will appear here once you add them.</p>\n  </div>\n);\n\nexport default function TransactionDashboard() {\n  const { transactions, isLoading, error, refetch } = useTransactions();\n  const [activeView, setActiveView] = useState<PeriodView>('all');\n  \n  // Process the transaction data\n  const processedData = useMemo(() => {\n    if (!transactions.length) return { balanceHistory: [], monthlySummary: [], weeklySummary: [] };\n    \n    // Helper to parse dates from string\n    const parseDate = (dateStr: string) => {\n      if (!dateStr) return new Date(); // Default to current date if none provided\n      \n      // Try different date formats\n      const dateFormats = [\n        /(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})/, // DD-MM-YYYY or DD/MM/YYYY\n        /(\\d{4})[-\\/](\\d{1,2})[-\\/](\\d{1,2})/, // YYYY-MM-DD or YYYY/MM/DD\n        /(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{2})/, // DD-MM-YY or DD/MM/YY\n      ];\n      \n      for (const format of dateFormats) {\n        const match = dateStr.match(format);\n        if (match) {\n          // Adjust based on format\n          if (format === dateFormats[0]) {\n            return new Date(Number(match[3]), Number(match[2]) - 1, Number(match[1]));\n          } else if (format === dateFormats[1]) {\n            return new Date(Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n          } else {\n            // For YY format, assume 20XX for years < 50, 19XX for years >= 50\n            const year = Number(match[3]);\n            const fullYear = year < 50 ? 2000 + year : 1900 + year;\n            return new Date(fullYear, Number(match[2]) - 1, Number(match[1]));\n          }\n        }\n      }\n      \n      // Try as direct Date parsing\n      const date = new Date(dateStr);\n      return isNaN(date.getTime()) ? new Date() : date;\n    };\n    \n    // Sort transactions by date\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      const dateA = parseDate(a.Date);\n      const dateB = parseDate(b.Date);\n      return dateA.getTime() - dateB.getTime();\n    });\n    \n    // Calculate running balance\n    let balance = 0;\n    const balanceHistory = sortedTransactions.map((transaction, index) => {\n      if (transaction.Type === 'Credit') {\n        balance += transaction.Amount;\n      } else {\n        balance -= transaction.Amount;\n      }\n      \n      return {\n        id: index,\n        date: transaction.Date,\n        name: transaction.Name,\n        amount: transaction.Amount,\n        type: transaction.Type,\n        balance: balance,\n      };\n    });\n    \n    // Group transactions by month\n    const monthlyData: Record<string, TransactionSummary> = {};\n    \n    sortedTransactions.forEach(transaction => {\n      const date = parseDate(transaction.Date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      const monthName = date.toLocaleString('default', { month: 'short', year: '2-digit' });\n      \n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          date: monthName,\n          balance: 0,\n          income: 0,\n          expense: 0\n        };\n      }\n      \n      if (transaction.Type === 'Credit') {\n        monthlyData[monthKey].income += transaction.Amount;\n        monthlyData[monthKey].balance += transaction.Amount;\n      } else {\n        monthlyData[monthKey].expense += transaction.Amount;\n        monthlyData[monthKey].balance -= transaction.Amount;\n      }\n    });\n    \n    const monthlySummary = Object.values(monthlyData);\n    \n    // Group transactions by week\n    const weeklyData: Record<string, TransactionSummary> = {};\n    \n    sortedTransactions.forEach(transaction => {\n      const date = parseDate(transaction.Date);\n      \n      // Get the week number (approximate)\n      const startDate = new Date(date.getFullYear(), 0, 1);\n      const days = Math.floor((date.getTime() - startDate.getTime()) / (24 * 60 * 60 * 1000));\n      const weekNumber = Math.ceil(days / 7);\n      \n      const weekKey = `${date.getFullYear()}-W${String(weekNumber).padStart(2, '0')}`;\n      const weekLabel = `W${weekNumber}, ${date.toLocaleString('default', { month: 'short' })}`;\n      \n      if (!weeklyData[weekKey]) {\n        weeklyData[weekKey] = {\n          date: weekLabel,\n          balance: 0,\n          income: 0,\n          expense: 0\n        };\n      }\n      \n      if (transaction.Type === 'Credit') {\n        weeklyData[weekKey].income += transaction.Amount;\n        weeklyData[weekKey].balance += transaction.Amount;\n      } else {\n        weeklyData[weekKey].expense += transaction.Amount;\n        weeklyData[weekKey].balance -= transaction.Amount;\n      }\n    });\n    \n    const weeklySummary = Object.values(weeklyData);\n    \n    return { balanceHistory, monthlySummary, weeklySummary };\n  }, [transactions]);\n  \n  // Custom tooltip for charts\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 shadow-sm rounded-lg text-sm\">\n          {payload[0].payload.date && <p className=\"font-medium text-gray-900 mb-1\">{payload[0].payload.date}</p>}\n          \n          {payload.map((entry: any, index: number) => (\n            <p key={`tooltip-${index}`} className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-800\">{entry.name}:</span>\n              <span className=\"font-medium text-gray-900\">{formatCurrency(entry.value)}</span>\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  // Limit data points for better visualization\n  const getVisibleData = () => {\n    if (activeView === 'monthly') {\n      return processedData.monthlySummary.slice(-12); // Last 12 months\n    } else if (activeView === 'weekly') {\n      return processedData.weeklySummary.slice(-12); // Last 12 weeks\n    } else {\n      // For 'all' view, limit to last 50 transactions for better visualization\n      return processedData.balanceHistory.slice(-50);\n    }\n  };\n  \n  // Calculate statistics\n  const getStats = () => {\n    if (!transactions.length) return { total: 0, income: 0, expense: 0 };\n    \n    const income = transactions\n      .filter(t => t.Type === 'Credit')\n      .reduce((sum, t) => sum + t.Amount, 0);\n      \n    const expense = transactions\n      .filter(t => t.Type === 'Debit')\n      .reduce((sum, t) => sum + t.Amount, 0);\n      \n    return {\n      total: income - expense,\n      income,\n      expense\n    };\n  };\n  \n  const stats = getStats();\n  const visibleData = getVisibleData();\n  \n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"rounded-lg border border-gray-300 bg-white p-4 shadow-sm\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Current Balance</h4>\n          <p className=\"text-2xl font-semibold text-gray-900\">{formatCurrency(stats.total)}</p>\n        </div>\n        \n        <div className=\"rounded-lg border border-gray-300 bg-white p-4 shadow-sm\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Total Income</h4>\n          <p className=\"text-2xl font-semibold text-gray-900\">{formatCurrency(stats.income)}</p>\n        </div>\n        \n        <div className=\"rounded-lg border border-gray-300 bg-white p-4 shadow-sm\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Total Expenses</h4>\n          <p className=\"text-2xl font-semibold text-gray-900\">{formatCurrency(stats.expense)}</p>\n        </div>\n      </div>\n      \n      {/* Main Chart */}\n      <div className=\"rounded-lg border border-gray-300 bg-white p-4 shadow-sm\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Financial Overview</h3>\n          \n          <div className=\"inline-flex rounded-md shadow-sm\">\n            <button\n              onClick={() => setActiveView('all')}\n              className={`px-4 py-2 text-sm font-medium ${\n                activeView === 'all'\n                  ? 'bg-gray-900 text-white'\n                  : 'bg-white text-gray-800 hover:bg-gray-100'\n              } rounded-l-lg border border-gray-300`}\n            >\n              All Time\n            </button>\n            <button\n              onClick={() => setActiveView('monthly')}\n              className={`px-4 py-2 text-sm font-medium ${\n                activeView === 'monthly'\n                  ? 'bg-gray-900 text-white'\n                  : 'bg-white text-gray-800 hover:bg-gray-100'\n              } border-t border-b border-gray-300`}\n            >\n              Monthly\n            </button>\n            <button\n              onClick={() => setActiveView('weekly')}\n              className={`px-4 py-2 text-sm font-medium ${\n                activeView === 'weekly'\n                  ? 'bg-gray-900 text-white'\n                  : 'bg-white text-gray-800 hover:bg-gray-100'\n              } rounded-r-lg border border-gray-300`}\n            >\n              Weekly\n            </button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <ChartSkeleton />\n        ) : error ? (\n          <ErrorDisplay message={error} retry={refetch} />\n        ) : !transactions.length ? (\n          <EmptyState />\n        ) : (\n          <div className=\"h-80\">\n            {activeView === 'all' ? (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={visibleData} margin={{ top: 5, right: 5, left: 5, bottom: 25 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    tick={{ fontSize: 12, fill: \"#333333\" }}\n                    tickFormatter={(value, index) => index % 5 === 0 ? value : ''}\n                    height={60}\n                  />\n                  <YAxis \n                    axisLine={false}\n                    tickLine={false}\n                    tickFormatter={(value) => formatCurrency(value)}\n                    width={80}\n                    style={{ fontSize: '12px', fill: \"#333333\" }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Line\n                    name=\"Balance\"\n                    type=\"monotone\"\n                    dataKey=\"balance\"\n                    stroke=\"#000000\"\n                    strokeWidth={2}\n                    dot={false}\n                    activeDot={{ r: 6, strokeWidth: 0, fill: \"#000000\" }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart \n                  data={visibleData} \n                  margin={{ top: 5, right: 5, left: 5, bottom: 25 }}\n                  barGap={5}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    height={60}\n                    tick={{ fontSize: 12, fill: \"#333333\" }}\n                  />\n                  <YAxis \n                    axisLine={false}\n                    tickLine={false}\n                    tickFormatter={(value) => formatCurrency(value)}\n                    width={80}\n                    style={{ fontSize: '12px', fill: \"#333333\" }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend />\n                  <Bar name=\"Income\" dataKey=\"income\" fill=\"#333333\" radius={[4, 4, 0, 0]} maxBarSize={40} />\n                  <Bar name=\"Expense\" dataKey=\"expense\" fill=\"#888888\" radius={[4, 4, 0, 0]} maxBarSize={40} />\n                  <Line\n                    name=\"Balance\"\n                    type=\"monotone\"\n                    dataKey=\"balance\"\n                    stroke=\"#000000\"\n                    strokeWidth={2}\n                    dot={false}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            )}\n          </div>\n        )}\n        \n        {!isLoading && !error && transactions.length > 0 && (\n          <div className=\"pt-4 text-center text-sm text-gray-700\">\n            {activeView === 'all' ? (\n              <p>Showing account balance over time based on your transactions</p>\n            ) : activeView === 'monthly' ? (\n              <p>Monthly income, expenses and balance for the last 12 months</p>\n            ) : (\n              <p>Weekly income, expenses and balance for the last 12 weeks</p>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3042, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, Suspense, lazy } from \"react\";\nimport { useTransactions } from \"@/app/api/getTransaction\";\n\nimport ActionButtons from \"@/app/components/ActionButtons\";\nimport AiSuggestions from \"@/app/components/AiSuggestions\";\nimport SpendingChart from \"@/app/components/SpendingChart\";\nimport BalanceGraph from \"@/app/components/BalanceChart\";\nimport CategoryComponent from \"@/app/components/CategoryComponent\"; // Added import for CategoryComponent\n\n// Lazy load components for better performance \nconst AccountsStats = lazy(() => import(\"@/app/components/AccountsStats\"));\nconst TransactionHistory = lazy(() => import(\"@/app/components/TransactionHistory\"));\n\n// BudgetOverview Component\nconst BudgetOverview = () => {\n  const [budgetData, setBudgetData] = useState({\n    totalBudget: 35000,\n    spentAmount: 22750,\n    currency: '₹'\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const response = await fetch(\n          'https://script.google.com/macros/s/AKfycbyJ6KzWs1QdL86o0gflTFKHZvGqpeYNh9cfjbRyV9A6vf2AL-Cx8lOFrFONursaOPHSiQ/exec?action=getBudget'\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          if (data.status === 'success' && data.budget) {\n            setBudgetData(data.budget);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching budget data:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  // Calculate percentage spent\n  const percentageSpent = Math.min(Math.round((budgetData.spentAmount / budgetData.totalBudget) * 100), 100);\n  \n  // Format currency for Indian Rupees\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  // Determine progress bar color based on percentage\n  const getProgressColor = (percentage: number): string => {\n    if (percentage >= 90) return 'bg-red-500';\n    if (percentage >= 75) return 'bg-orange-500';\n    if (percentage >= 50) return 'bg-yellow-500';\n    return 'bg-green-500';\n  };\n\n  return (\n    <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm\">\n      <h3 className=\"mb-3 text-lg font-medium text-gray-900\">Budget Overview</h3>\n      \n      {isLoading ? (\n        <div className=\"space-y-3 animate-pulse\">\n          <div className=\"flex justify-between\">\n            <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n          </div>\n          <div className=\"h-2 w-full rounded-full bg-gray-200\"></div>\n          <div className=\"flex justify-between\">\n            <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-28\"></div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-sm text-gray-900 font-medium\">Monthly Budget</span>\n            <span className=\"font-medium text-gray-900\">\n              {formatCurrency(budgetData.totalBudget)}\n            </span>\n          </div>\n          \n          <div className=\"h-2 w-full rounded-full bg-gray-200\">\n            <div \n              className={`h-2 rounded-full ${getProgressColor(percentageSpent)}`} \n              style={{ width: `${percentageSpent}%` }}\n            ></div>\n          </div>\n          \n          <div className=\"flex justify-between\">\n            <span className=\"text-sm text-gray-900 font-medium\">Spent</span>\n            <span className=\"text-sm text-gray-900 font-medium\">\n              {formatCurrency(budgetData.spentAmount)} ({percentageSpent}%)\n            </span>\n          </div>\n          \n          <div className=\"flex justify-between pt-2\">\n            <span className=\"text-sm text-gray-900 font-medium\">Remaining</span>\n            <span className={`text-sm font-medium ${percentageSpent >= 90 ? 'text-red-600' : 'text-green-600'}`}>\n              {formatCurrency(budgetData.totalBudget - budgetData.spentAmount)}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Loading Fallback Component\nconst ComponentLoader = () => (\n  <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm animate-pulse\">\n    <div className=\"h-6 bg-gray-200 rounded w-48 mb-4\"></div>\n    <div className=\"space-y-3\">\n      <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\n      <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\n      <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n    </div>\n  </div>\n);\n\nexport default function Dashboard() {\n  const { transactions, isLoading: isLoadingTransactions } = useTransactions();\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-200 bg-white shadow-sm\">\n        <div className=\"mx-auto flex max-w-6xl items-center justify-between px-4 py-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Penny Wise</h1>\n          <div className=\"flex items-center gap-4\">\n            <button className=\"rounded-full bg-gray-100 p-2 relative text-gray-700\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n              </svg>\n              {transactions.length > 0 && (\n                <span className=\"absolute -top-1 -right-1 h-4 w-4 rounded-full bg-red-500 text-white text-xs flex items-center justify-center\">\n                  {Math.min(transactions.length, 9)}\n                </span>\n              )}\n            </button>\n            <div className=\"h-8 w-8 rounded-full bg-gray-800 text-white flex items-center justify-center\">\n              <span className=\"text-sm font-medium\">DD</span>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"mx-auto max-w-6xl px-4 py-6\">\n        {/* Dashboard Content */}\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n          {/* Left Column */}\n          <div className=\"space-y-6 md:col-span-2\">\n            <Suspense fallback={<ComponentLoader />}>\n              <BalanceGraph />\n            </Suspense>\n            \n            <Suspense fallback={<ComponentLoader />}>\n              <AccountsStats />\n            </Suspense>\n            \n            <Suspense fallback={<ComponentLoader />}>\n              <SpendingChart />\n            </Suspense>\n            \n            <Suspense fallback={<ComponentLoader />}>\n              <CategoryComponent />\n            </Suspense>\n            \n            <Suspense fallback={<ComponentLoader />}>\n              <TransactionHistory />\n            </Suspense>\n          </div>\n\n          {/* Right Column */}\n          <div className=\"space-y-6\">\n            <ActionButtons />\n            <BudgetOverview />\n            <AiSuggestions />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}