{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/api/getTransaction.ts"],"sourcesContent":["// lib/api/transactionApi.ts\nimport { useState, useEffect } from 'react';\n\n// Define types for our transaction data\nexport interface Transaction {\n  'Sr. No.': number;\n  'Name': string;\n  'Type': 'Credit' | 'Debit';\n  'Amount': number;\n  'Transaction Type': string;\n  'Category': string;\n  'Note': string;\n}\n\nexport interface TransactionResponse {\n  status: 'success' | 'error';\n  data: Transaction[];\n  error?: string;\n}\n\n// Custom hook to fetch transactions with loading and error states\nexport const useTransactions = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchTransactions = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbyJ6KzWs1QdL86o0gflTFKHZvGqpeYNh9cfjbRyV9A6vf2AL-Cx8lOFrFONursaOPHSiQ/exec?action=getTransactions'\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const data: TransactionResponse = await response.json();\n      \n      if (data.status === 'success') {\n        setTransactions(data.data);\n      } else {\n        throw new Error(data.error || 'Failed to fetch transactions');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unknown error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  return { transactions, isLoading, error, refetch: fetchTransactions };\n};"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAC5B;;;AAoBO,MAAM,kBAAkB;;IAC7B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,oBAAoB;QACxB,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MACrB;YAGF,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC1D;YAEA,MAAM,OAA4B,MAAM,SAAS,IAAI;YAErD,IAAI,KAAK,MAAM,KAAK,WAAW;gBAC7B,gBAAgB,KAAK,IAAI;YAC3B,OAAO;gBACL,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,aAAa;QACf;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR;QACF;oCAAG,EAAE;IAEL,OAAO;QAAE;QAAc;QAAW;QAAO,SAAS;IAAkB;AACtE;GArCa","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/test/page.tsx"],"sourcesContent":["// components/dashboard/AccountBalanceChart.tsx\n\"use client\";\n\nimport React from 'react';\nimport { useTransactions } from '@/app/api/getTransaction';\nimport { Line, LineChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts';\n\n// Currency formatter for Indian Rupees\nconst formatCurrency = (amount: number) => {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0\n  }).format(amount);\n};\n\n// Loading skeleton component\nconst ChartSkeleton = () => (\n  <div className=\"animate-pulse\">\n    <div className=\"h-4 w-24 bg-gray-200 rounded mb-4\"></div>\n    <div className=\"h-64 w-full bg-gray-200 rounded\"></div>\n  </div>\n);\n\n// Error component\nconst ErrorDisplay = ({ message, retry }: { message: string, retry: () => void }) => (\n  <div className=\"py-6 flex flex-col items-center justify-center text-center\">\n    <div className=\"mb-3 h-12 w-12 rounded-full bg-red-100 flex items-center justify-center\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-red-500\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n      </svg>\n    </div>\n    <h4 className=\"text-base font-medium text-gray-900\">Failed to load balance data</h4>\n    <p className=\"mt-1 text-sm text-gray-500\">{message}</p>\n    <button \n      onClick={retry}\n      className=\"mt-4 rounded-lg border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-800 shadow-sm hover:bg-gray-50\"\n    >\n      Try Again\n    </button>\n  </div>\n);\n\nexport default function AccountBalanceChart() {\n  const { transactions, isLoading, error, refetch } = useTransactions();\n  \n  // Calculate balance history based on transactions\n  const calculateBalanceHistory = () => {\n    if (!transactions.length) return [];\n    \n    // Sort transactions by Sr. No. to maintain chronological order\n    const sortedTransactions = [...transactions].sort((a, b) => a['Sr. No.'] - b['Sr. No.']);\n    \n    // Calculate running balance\n    let balance = 0;\n    const balanceHistory = sortedTransactions.map((transaction, index) => {\n      if (transaction.Type === 'Credit') {\n        balance += transaction.Amount;\n      } else {\n        balance -= transaction.Amount;\n      }\n      \n      return {\n        id: index,\n        balance: balance,\n      };\n    });\n    \n    return balanceHistory;\n  };\n  \n  const balanceHistory = calculateBalanceHistory();\n  \n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-2 border border-gray-200 shadow-sm rounded-lg text-sm\">\n          <p className=\"font-medium text-gray-900\">{formatCurrency(payload[0].value)}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Account Balance</h3>\n      </div>\n      \n      {isLoading ? (\n        <ChartSkeleton />\n      ) : error ? (\n        <ErrorDisplay message={error} retry={refetch} />\n      ) : balanceHistory.length === 0 ? (\n        <div className=\"py-6 flex flex-col items-center justify-center text-center\">\n          <div className=\"mb-3 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-gray-400\">\n              <rect x=\"2\" y=\"5\" width=\"20\" height=\"14\" rx=\"2\"></rect>\n              <line x1=\"2\" y1=\"10\" x2=\"22\" y2=\"10\"></line>\n            </svg>\n          </div>\n          <h4 className=\"text-base font-medium text-gray-900\">No balance data available</h4>\n          <p className=\"mt-1 text-sm text-gray-500\">Your account balance will appear here once you have transactions.</p>\n        </div>\n      ) : (\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={balanceHistory} margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>\n              <XAxis dataKey=\"id\" hide={true} />\n              <YAxis \n                axisLine={false}\n                tickLine={false}\n                tickFormatter={(value) => formatCurrency(value)}\n                width={60}\n                style={{ fontSize: '12px' }}\n              />\n              <Tooltip content={<CustomTooltip />} />\n              <Line\n                type=\"monotone\"\n                dataKey=\"balance\"\n                stroke=\"#000\"\n                strokeWidth={2}\n                dot={false}\n                activeDot={{ r: 6, fill: \"#000\", strokeWidth: 0 }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}