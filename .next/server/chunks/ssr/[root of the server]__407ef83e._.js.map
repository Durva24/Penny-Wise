{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Penny-Wise/app/Registration/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\n\nconst Registration: React.FC = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    agreeTerms: false\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Add registration logic here\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-black\">\n          Create your account\n        </h2>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md border border-gray-200 sm:rounded-lg sm:px-10\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-black\">\n                Full Name\n              </label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                className=\"mt-1 block w-full border border-black rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-black focus:border-black\"\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-black\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"mt-1 block w-full border border-black rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-black focus:border-black\"\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-black\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"mt-1 block w-full border border-black rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-black focus:border-black\"\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n              />\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                id=\"agreeTerms\"\n                name=\"agreeTerms\"\n                type=\"checkbox\"\n                required\n                className=\"h-4 w-4 border-black rounded focus:ring-black\"\n                onChange={(e) => setFormData({ ...formData, agreeTerms: e.target.checked })}\n              />\n              <label htmlFor=\"agreeTerms\" className=\"ml-2 block text-sm text-black\">\n                I agree to the <Link href=\"/terms\" className=\"text-black underline hover:no-underline\">Terms and Conditions</Link>\n              </label>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-black rounded-md shadow-sm text-sm font-medium text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n              >\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,eAAyB;IAC7B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM;QACN,OAAO;QACP,UAAU;QACV,YAAY;IACd;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;IAChB,8BAA8B;IAChC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAsD;;;;;;;;;;;0BAKtE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;wBAAY,UAAU;;0CACpC,8OAAC;;kDACC,8OAAC;wCAAM,SAAQ;wCAAO,WAAU;kDAAuC;;;;;;kDAGvE,8OAAC;wCACC,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,QAAQ;wCACR,WAAU;wCACV,UAAU,CAAC,IAAM,YAAY;gDAAE,GAAG,QAAQ;gDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4CAAC;;;;;;;;;;;;0CAIrE,8OAAC;;kDACC,8OAAC;wCAAM,SAAQ;wCAAQ,WAAU;kDAAuC;;;;;;kDAGxE,8OAAC;wCACC,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAa;wCACb,QAAQ;wCACR,WAAU;wCACV,UAAU,CAAC,IAAM,YAAY;gDAAE,GAAG,QAAQ;gDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4CAAC;;;;;;;;;;;;0CAItE,8OAAC;;kDACC,8OAAC;wCAAM,SAAQ;wCAAW,WAAU;kDAAuC;;;;;;kDAG3E,8OAAC;wCACC,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAa;wCACb,QAAQ;wCACR,WAAU;wCACV,UAAU,CAAC,IAAM,YAAY;gDAAE,GAAG,QAAQ;gDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4CAAC;;;;;;;;;;;;0CAIzE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,QAAQ;wCACR,WAAU;wCACV,UAAU,CAAC,IAAM,YAAY;gDAAE,GAAG,QAAQ;gDAAE,YAAY,EAAE,MAAM,CAAC,OAAO;4CAAC;;;;;;kDAE3E,8OAAC;wCAAM,SAAQ;wCAAa,WAAU;;4CAAgC;0DACrD,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAK;gDAAS,WAAU;0DAA0C;;;;;;;;;;;;;;;;;;0CAI3F,8OAAC;0CACC,cAAA,8OAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;uCAEe","debugId":null}}]
}